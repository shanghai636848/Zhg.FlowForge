<!-- PropertySection.razor - 优化版属性区块组件 -->
<div class="group overflow-hidden rounded-xl border @GetBorderColor() bg-white shadow-sm transition-all hover:shadow-md">
    <div class="flex cursor-pointer select-none items-center justify-between border-b @GetBorderColor() bg-gradient-to-r @GetGradient() px-4 py-2.5 transition-all hover:@GetHoverGradient()"
         @onclick="ToggleSection">
        <span class="flex items-center gap-2 text-sm font-semibold @GetTextColor()">
            <i class="fas @Icon text-xs @GetIconColor() transition-transform group-hover:rotate-12"></i>
            @Title
        </span>
        <span class="text-xs @GetIconColor() transition-all duration-300 @(IsCollapsed ? "-rotate-90" : "rotate-0")">
            <i class="fas fa-chevron-down"></i>
        </span>
    </div>

    <div class="@GetSectionContentClass()">
        @ChildContent
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public string Icon { get; set; } = "";
    [Parameter] public string Color { get; set; } = "blue";
    [Parameter] public bool IsVisible { get; set; } = true;
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private bool IsCollapsed { get; set; } = false;

    protected override void OnParametersSet()
    {
        if (!IsVisible)
        {
            IsCollapsed = true;
        }
    }

    private void ToggleSection()
    {
        IsCollapsed = !IsCollapsed;
    }

    private string GetSectionContentClass()
    {
        return IsCollapsed
            ? "max-h-0 overflow-hidden transition-all duration-300 ease-in-out px-4 py-0"
            : "max-h-[2000px] overflow-hidden transition-all duration-300 ease-in-out px-4 py-3";
    }

    private string GetBorderColor() => Color switch
    {
        "blue" => "border-blue-200",
        "emerald" => "border-emerald-200",
        "purple" => "border-purple-200",
        "amber" => "border-amber-200",
        "rose" => "border-rose-200",
        "indigo" => "border-indigo-200",
        "violet" => "border-violet-200",
        "cyan" => "border-cyan-200",
        "fuchsia" => "border-fuchsia-200",
        _ => "border-slate-200"
    };

    private string GetGradient() => Color switch
    {
        "blue" => "from-blue-50 via-cyan-50/50 to-blue-50",
        "emerald" => "from-emerald-50 via-teal-50/50 to-emerald-50",
        "purple" => "from-purple-50 via-fuchsia-50/50 to-purple-50",
        "amber" => "from-amber-50 via-yellow-50/50 to-amber-50",
        "rose" => "from-rose-50 via-pink-50/50 to-rose-50",
        "indigo" => "from-indigo-50 via-purple-50/50 to-indigo-50",
        "violet" => "from-violet-50 via-purple-50/50 to-violet-50",
        "cyan" => "from-cyan-50 via-blue-50/50 to-cyan-50",
        "fuchsia" => "from-fuchsia-50 via-pink-50/50 to-fuchsia-50",
        _ => "from-slate-50 via-blue-50/50 to-slate-50"
    };

    private string GetHoverGradient() => Color switch
    {
        "blue" => "from-blue-100 via-cyan-100/50 to-blue-100",
        "emerald" => "from-emerald-100 via-teal-100/50 to-emerald-100",
        "purple" => "from-purple-100 via-fuchsia-100/50 to-purple-100",
        "amber" => "from-amber-100 via-yellow-100/50 to-amber-100",
        "rose" => "from-rose-100 via-pink-100/50 to-rose-100",
        "indigo" => "from-indigo-100 via-purple-100/50 to-indigo-100",
        "violet" => "from-violet-100 via-purple-100/50 to-violet-100",
        "cyan" => "from-cyan-100 via-blue-100/50 to-cyan-100",
        "fuchsia" => "from-fuchsia-100 via-pink-100/50 to-fuchsia-100",
        _ => "from-slate-100 via-blue-100/50 to-slate-100"
    };

    private string GetTextColor() => $"text-{Color}-700";
    private string GetIconColor() => $"text-{Color}-500";
}