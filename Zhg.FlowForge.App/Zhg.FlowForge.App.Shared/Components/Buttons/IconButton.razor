<button class="@GetButtonClass()"
        disabled="@Disabled"
        title="@Title"
        @onclick="OnClickHandler">
    <i class="@Icon text-xs"></i>
</button>

@code {
    [Parameter] public string Icon { get; set; } = "";
    [Parameter] public string Variant { get; set; } = "default"; // default, ghost, ghost-light
    [Parameter] public string Size { get; set; } = "md"; // xs, sm, md, lg
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public EventCallback OnClick { get; set; }

    private async Task OnClickHandler()
    {
        if (!Disabled)
        {
            await OnClick.InvokeAsync();
        }
    }

    private string GetButtonClass()
    {
        var baseClass = "inline-flex items-center justify-center rounded-md transition-colors";

        // 尺寸
        var sizeClass = Size switch
        {
            "xs" => "w-5 h-5",
            "sm" => "w-6 h-6",
            "lg" => "w-9 h-9",
            _ => "w-7 h-7"
        };

        // 变体
        var variantClass = Variant switch
        {
            "ghost" => "hover:bg-slate-100 text-slate-600",
            "ghost-light" => "bg-white/10 hover:bg-white/20 text-white",
            _ => "border border-slate-300 bg-white text-slate-600 hover:bg-slate-50"
        };

        // 状态
        var stateClass = Disabled ? "opacity-50 cursor-not-allowed" : "";

        return $"{baseClass} {sizeClass} {variantClass} {stateClass}";
    }
}