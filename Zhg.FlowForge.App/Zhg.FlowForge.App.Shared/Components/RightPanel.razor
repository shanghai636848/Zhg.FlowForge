@using Microsoft.AspNetCore.Components

<div class="flex w-80 flex-col overflow-hidden border-l border-gray-200 bg-white">
    <!-- 面板头部 -->
    <div class="flex items-center justify-between border-b border-gray-200 bg-gray-50 px-4 py-3">
        <span class="text-sm font-semibold tracking-wide text-gray-700 uppercase">属性面板</span>
        <i class="fas fa-sliders-h text-sm text-gray-500"></i>
    </div>

    <!-- 面板内容 -->
    <div id="property-content" class="flex flex-1 flex-col space-y-5 overflow-y-auto p-4">
        <!-- 基本属性部分 -->
        <PropertySection Title="基本属性" Icon="fa-cog" IsVisible="true">
            <div class="flex flex-col space-y-3">
                <FormGroup Label="元素类型" Icon="fa-shapes">
                    <input type="text" class="w-full rounded border border-gray-200 bg-white px-3 py-2 text-sm text-gray-900 transition-all duration-200 focus:border-blue-500 focus:ring-3 focus:ring-blue-100 focus:outline-none disabled:cursor-not-allowed disabled:bg-gray-50 disabled:text-gray-500"
                           value="@SelectedElementType" disabled />
                </FormGroup>

                <FormGroup Label="ID" Icon="fa-id-card">
                    <input type="text" class="w-full rounded border border-gray-200 bg-white px-3 py-2 text-sm text-gray-900 transition-all duration-200 focus:border-blue-500 focus:ring-3 focus:ring-blue-100 focus:outline-none"
                           value="@SelectedElementId"
                           @oninput="@(async (e) => await OnUpdateProperty.InvokeAsync((" id", e.Value?.ToString())))" />
                </FormGroup>

                <FormGroup Label="名称" Icon="fa-font">
                    <input type="text" class="w-full rounded border border-gray-200 bg-white px-3 py-2 text-sm text-gray-900 transition-all duration-200 focus:border-blue-500 focus:ring-3 focus:ring-blue-100 focus:outline-none"
                           value="@SelectedElementName"
                           @oninput="@(async (e) => await OnUpdateProperty.InvokeAsync((" name", e.Value?.ToString())))" />
                </FormGroup>

                <FormGroup Label="文档说明" Icon="fa-file-alt">
                    <textarea class="h-auto min-h-20 w-full resize-y rounded border border-gray-200 bg-white px-3 py-2 font-mono text-sm text-gray-900 transition-all duration-200 focus:border-blue-500 focus:ring-3 focus:ring-blue-100 focus:outline-none"
                              @oninput="@(async (e) => await OnUpdateDocumentation.InvokeAsync(e.Value?.ToString()))"></textarea>
                </FormGroup>
            </div>
        </PropertySection>

        <!-- 连线属性部分 -->
        <PropertySection Title="连线属性" Icon="fa-link" IsVisible="IsSequenceFlowSelected">
            <div class="flex flex-col space-y-3">
                <FormGroup Label="来源" Icon="fa-arrow-right">
                    <input type="text" class="w-full rounded border border-gray-200 bg-white px-3 py-2 text-sm text-gray-900 transition-all duration-200 focus:border-blue-500 focus:ring-3 focus:ring-blue-100 focus:outline-none disabled:cursor-not-allowed disabled:bg-gray-50 disabled:text-gray-500"
                           disabled />
                </FormGroup>

                <FormGroup Label="目标" Icon="fa-arrow-left">
                    <input type="text" class="w-full rounded border border-gray-200 bg-white px-3 py-2 text-sm text-gray-900 transition-all duration-200 focus:border-blue-500 focus:ring-3 focus:ring-blue-100 focus:outline-none disabled:cursor-not-allowed disabled:bg-gray-50 disabled:text-gray-500"
                           disabled />
                </FormGroup>

                <FormGroup Label="条件表达式" Icon="fa-code">
                    <textarea id="condition-input" class="min-h-15 w-full resize-y rounded border border-gray-200 bg-white px-3 py-2 text-sm text-gray-900 transition-all duration-200 focus:border-blue-500 focus:ring-3 focus:ring-blue-100 focus:outline-none"
                              placeholder="${condition}"></textarea>
                    <button class="mt-2 flex w-full cursor-pointer items-center justify-center rounded border border-dashed border-gray-200 px-3 py-2 text-sm font-medium text-gray-500 transition-all duration-200 hover:border-blue-500 hover:bg-gray-50 hover:text-blue-500"
                            @onclick="async () => await OnOpenConditionBuilder.InvokeAsync()">
                        <i class="fas fa-tools mr-2"></i> 使用条件构建器
                    </button>
                </FormGroup>

                <div id="condition-builder" class="mt-4 hidden rounded border bg-white p-4">
                    <!-- 条件构建器内容 -->
                </div>
            </div>
        </PropertySection>

        <!-- 任务配置部分 -->
        <PropertySection Title="任务配置" Icon="fa-cogs" IsVisible="IsTaskSelected">
            <div class="flex flex-col space-y-4">
                <FormGroup Label="处理类" Icon="fa-code">
                    <input type="text" class="w-full rounded border border-gray-200 bg-white px-3 py-2 text-sm text-gray-900 transition-all duration-200 focus:border-blue-500 focus:ring-3 focus:ring-blue-100 focus:outline-none"
                           placeholder="com.example.Handler"
                           @oninput="async (e) => await OnUpdateServiceClass.InvokeAsync(e.Value?.ToString())" />
                </FormGroup>

                <div class="flex flex-col space-y-2">
                    <label class="mt-2 flex items-center text-sm font-medium font-semibold text-gray-700">
                        <i class="fas fa-sign-in-alt mr-2"></i> 输入参数
                    </label>
                    <div class="flex flex-col space-y-3" id="input-params">
                        <!-- 输入参数项将通过JS动态添加 -->
                    </div>
                    <button class="mt-2 flex w-full cursor-pointer items-center justify-center rounded border border-dashed border-gray-200 px-3 py-2 text-sm font-medium text-gray-500 transition-all duration-200 hover:border-blue-500 hover:bg-gray-50 hover:text-blue-500"
                            @onclick="async () => await OnAddInputParam.InvokeAsync()">
                        <i class="fas fa-plus mr-2"></i> 添加输入参数
                    </button>
                </div>

                <div class="flex flex-col space-y-2">
                    <label class="mt-2 flex items-center text-sm font-medium font-semibold text-gray-700">
                        <i class="fas fa-sign-out-alt mr-2"></i> 输出参数
                    </label>
                    <div class="flex flex-col space-y-3" id="output-params">
                        <!-- 输出参数项将通过JS动态添加 -->
                    </div>
                    <button class="mt-2 flex w-full cursor-pointer items-center justify-center rounded border border-dashed border-gray-200 px-3 py-2 text-sm font-medium text-gray-500 transition-all duration-200 hover:border-blue-500 hover:bg-gray-50 hover:text-blue-500"
                            @onclick="async () => await OnAddOutputParam.InvokeAsync()">
                        <i class="fas fa-plus mr-2"></i> 添加输出参数
                    </button>
                </div>
            </div>
        </PropertySection>
    </div>
</div>

@code {
    [Parameter] public string? SelectedElementId { get; set; }
    [Parameter] public string SelectedElementType { get; set; } = string.Empty;
    [Parameter] public string SelectedElementName { get; set; } = string.Empty;
    [Parameter] public bool IsSequenceFlowSelected { get; set; }
    [Parameter] public bool IsTaskSelected { get; set; }

    [Parameter] public EventCallback<(string key, string? value)> OnUpdateProperty { get; set; }
    [Parameter] public EventCallback<string?> OnUpdateDocumentation { get; set; }
    [Parameter] public EventCallback<string?> OnUpdateServiceClass { get; set; }
    [Parameter] public EventCallback OnAddInputParam { get; set; }
    [Parameter] public EventCallback OnAddOutputParam { get; set; }
    [Parameter] public EventCallback OnOpenConditionBuilder { get; set; }
}