
<div class="@ContainerClass">
    <label class="flex cursor-pointer items-center gap-2 @(Disabled ? "opacity-60 cursor-not-allowed" : "")">
        <input type="radio"
               class="@GetRadioClass()"
               name="@Name"
               value="@Value"
               checked="@(SelectedValue == Value)"
               disabled="@Disabled"
               @onchange="OnChangeHandler" />

        @if (ChildContent != null)
        {
            <span class="text-xs text-slate-700 select-none">
                @ChildContent
            </span>
        }
    </label>
</div>

@code {
    [Parameter] public string Name { get; set; } = "";
    [Parameter] public string Value { get; set; } = "";
    [Parameter] public string SelectedValue { get; set; } = "";
    [Parameter] public string Size { get; set; } = "md"; // sm, md, lg
    [Parameter] public string ContainerClass { get; set; } = "";
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback<string> SelectedValueChanged { get; set; }

    private async Task OnChangeHandler(ChangeEventArgs e)
    {
        SelectedValue = Value;
        await SelectedValueChanged.InvokeAsync(SelectedValue);
    }

    private string GetRadioClass()
    {
        var baseClass = "border-slate-300 text-blue-600 transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-0";

        var sizeClass = Size switch
        {
            "sm" => "w-3 h-3",
            "lg" => "w-5 h-5",
            _ => "w-4 h-4"
        };

        return $"{baseClass} {sizeClass}";
    }
}