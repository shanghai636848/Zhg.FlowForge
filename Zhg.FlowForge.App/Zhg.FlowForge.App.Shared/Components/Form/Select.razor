<div class="@ContainerClass">
	@if (!string.IsNullOrEmpty(Label))
	{
		<label class="mb-1 block text-xs font-medium text-slate-700">
			@if (Required)
			{
				<span class="text-rose-500">*</span>
			}
			@Label
		</label>
	}

	<div class="relative">
		<select class="@GetSelectClass()"
				disabled="@Disabled"
				@bind="Value">
			@if (!string.IsNullOrEmpty(Placeholder))
			{
				<option value="">@Placeholder</option>
			}
			@foreach (var option in Options)
			{
				<option value="@option.Value">@option.Label</option>
			}
		</select>
		<i class="fas fa-chevron-down pointer-events-none absolute top-2 right-2.5 text-xs text-slate-400"></i>
	</div>
	@if (HasError && !string.IsNullOrEmpty(ErrorMessage))
	{
		<span class="mt-1 flex items-center gap-1 text-xs text-rose-600">
			<i class="fas fa-exclamation-circle text-[0.625rem]"></i>
			@ErrorMessage
		</span>
	}
	@if (!string.IsNullOrEmpty(HelpText))
	{
		<span class="mt-1 block text-xs text-slate-500">@HelpText</span>
	}
</div>

@code {

	[Parameter] public string Label { get; set; } = "";
	[Parameter] public string Placeholder { get; set; } = "";
	[Parameter] public string Value { get; set; } = "";
	[Parameter] public string HelpText { get; set; } = "";
	[Parameter] public string ErrorMessage { get; set; } = "";
	[Parameter] public string Size { get; set; } = "md"; // sm, md, lg
	[Parameter] public string ContainerClass { get; set; } = "";
	[Parameter] public bool Required { get; set; }
	[Parameter] public bool Disabled { get; set; }
	[Parameter] public bool HasError { get; set; }
	[Parameter] public List<SelectOption> Options { get; set; } = new();
	[Parameter] public EventCallback<string> ValueChanged { get; set; }
	private string GetSelectClass()
	{
		var baseClass = "w-full rounded-md border bg-white text-xs text-slate-700 transition-all appearance-none"; var sizeClass = Size switch
		{
			"sm" => "h-6 px-2 py-1 pr-7",
			"lg" => "h-8 px-3 py-2 pr-9",
			_ => "h-7 px-2 py-1.5 pr-8"
		}; var stateClass = HasError
			? "border-rose-300 focus:border-rose-400 focus:ring-1 focus:ring-rose-100"
			: "border-blue-200 hover:border-blue-300 focus:border-blue-400 focus:outline-none focus:ring-1 focus:ring-blue-100"; if (Disabled) stateClass += " bg-slate-50 cursor-not-allowed opacity-60"; return $"{baseClass} {sizeClass} {stateClass}";
	}
	public record SelectOption(string Value, string Label);
}