@using Zhg.FlowForge.App.Shared.Components
@using Zhg.FlowForge.App.Shared.Components.Feedback
@using Zhg.FlowForge.App.Shared.Components.Navigation
@* @inherits LayoutComponentBase
@inject IThemeService ThemeService

<div class="flex h-screen flex-col bg-slate-50" data-theme="@CurrentTheme">
    <!-- 顶部导航栏 -->
    <TopNavBar />

    <!-- 主内容区 -->
    <main class="flex-1 overflow-hidden">
        @Body
    </main>

    <!-- 全局 Toast 通知 -->
    <ToastContainer />
</div>

@code {
    private string CurrentTheme = "tech-blue";

    protected override async Task OnInitializedAsync()
    {
        CurrentTheme = await ThemeService.GetCurrentThemeAsync();
        ThemeService.OnThemeChanged += OnThemeChanged;
    }

    private void OnThemeChanged(string newTheme)
    {
        CurrentTheme = newTheme;
        StateHasChanged();
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= OnThemeChanged;
    }
} *@


@inherits LayoutComponentBase
@inject IThemeService ThemeService
@inject ILocalizationService Localization
<div class="flex min-h-screen flex-col bg-slate-50" data-theme="@CurrentTheme">
	<!-- 全局 Header -->
	<AppHeader ShowBreadcrumb="true" Breadcrumbs="@CurrentBreadcrumbs" />

	<!-- 主内容区 -->
	<main class="flex flex-1">
		@Body
	</main>

	<!-- 全局 Footer -->
	<AppFooter />

	<!-- 全局 Toast 通知 -->
	<Toast />

	<!-- Cookie 同意横幅 -->
	@if (ShowCookieBanner)
	{
		<CookieBanner OnAccept="AcceptCookies" OnReject="RejectCookies" />
	}
</div>

@code {
	private string CurrentTheme = "tech-blue";
	private bool ShowCookieBanner = false;
	private List<AppHeader.BreadcrumbItem> CurrentBreadcrumbs = new();

	protected override async Task OnInitializedAsync()
	{
		CurrentTheme = await ThemeService.GetCurrentThemeAsync();
		ThemeService.OnThemeChanged += OnThemeChanged;

		Localization.OnLanguageChanged += StateHasChanged;

		// 检查是否需要显示 Cookie 横幅
		ShowCookieBanner = await CheckCookieConsent();
	}

	private void OnThemeChanged(string newTheme)
	{
		CurrentTheme = newTheme;
		StateHasChanged();
	}

	private async Task<bool> CheckCookieConsent()
	{
		// 检查是否已同意 Cookie
		return false; // 示例
	}

	private void AcceptCookies()
	{
		ShowCookieBanner = false;
		// 保存同意状态
	}

	private void RejectCookies()
	{
		ShowCookieBanner = false;
		// 保存拒绝状态
	}

	public void Dispose()
	{
		ThemeService.OnThemeChanged -= OnThemeChanged;
		Localization.OnLanguageChanged -= StateHasChanged;
	}
}