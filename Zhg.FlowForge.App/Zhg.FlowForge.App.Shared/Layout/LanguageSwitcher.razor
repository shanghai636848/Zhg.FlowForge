<!-- ============================================ -->
<!-- LanguageSwitcher.razor - 语言切换器 -->
<!-- ============================================ -->
@* @page "/components/language-switcher" *@

<div class="relative" @ref="dropdownRef">
    <button @onclick="ToggleDropdown"
            class="group flex h-8 items-center gap-1.5 rounded-lg border border-slate-200 bg-white/90 px-2.5 py-1.5 shadow-sm backdrop-blur-sm transition-all hover:scale-105 hover:border-slate-300 hover:bg-white hover:shadow-md active:scale-95">
        <span class="text-sm transition-transform group-hover:scale-110">@GetCurrentFlag()</span>
        <span class="text-xs font-medium text-slate-700 transition-colors group-hover:text-indigo-600">@GetCurrentLanguageCode()</span>
        <svg class="h-3 w-3 text-slate-500 transition-all duration-300 group-hover:text-indigo-600 @(isOpen ? "rotate-180" : "")"
             fill="none"
             stroke="currentColor"
             viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
    </button>

    @if (isOpen)
    {
        <div class="absolute right-0 top-full z-50 mt-2 w-56 animate-dropdown overflow-hidden rounded-xl border border-slate-200 bg-white/95 shadow-2xl backdrop-blur-md">
            <div class="p-2">
                @foreach (var lang in languages)
                {
                    <button @onclick="() => SelectLanguage(lang.Key)"
                            class="group relative w-full overflow-hidden rounded-lg transition-all duration-200 @(lang.Key == currentLangKey ? "bg-gradient-to-r from-blue-50 via-indigo-50 to-purple-50" : "hover:bg-gradient-to-r hover:from-slate-50 hover:to-blue-50/50")">
                        <div class="flex items-center gap-2.5 px-3 py-2">
                            <span class="text-base transition-transform group-hover:scale-125">@lang.Value.Flag</span>
                            <div class="flex-1 text-left">
                                <div class="text-xs font-semibold text-slate-900 transition-colors group-hover:text-indigo-600">
                                    @lang.Value.Name
                                </div>
                                <div class="text-[10px] text-slate-500">@lang.Value.NativeName</div>
                            </div>
                            @if (lang.Key == currentLangKey)
                            {
                                <div class="flex h-5 w-5 items-center justify-center rounded-full bg-gradient-to-br from-blue-500 to-indigo-600 shadow-sm">
                                    <svg class="h-3 w-3 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M5 13l4 4L19 7" />
                                    </svg>
                                </div>
                            }
                        </div>

                        <div class="absolute bottom-0 left-0 h-0.5 w-0 bg-gradient-to-r from-blue-500 via-indigo-500 to-purple-500 transition-all duration-300 group-hover:w-full"></div>
                    </button>
                }
            </div>
        </div>
    }
</div>

<style>
    @@keyframes dropdown {
        from {
            opacity: 0;
            transform: translateY(-12px) scale(0.95);
        }

        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }
    }

    .animate-dropdown {
        animation: dropdown 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }
</style>

@code {
    private bool isOpen = false;
    private ElementReference dropdownRef;
    private string currentLangKey = "en";

    [Parameter] public LanguageData CurrentLanguage { get; set; } = LanguageData.English;
    [Parameter] public EventCallback<LanguageData> CurrentLanguageChanged { get; set; }

    private Dictionary<string, LanguageInfo> languages = new()
    {
        { "en", new LanguageInfo { Flag = "🇺🇸", Name = "English", NativeName = "English", Code = "EN" } },
        { "zh", new LanguageInfo { Flag = "🇨🇳", Name = "Chinese", NativeName = "中文", Code = "中文" } },
        { "es", new LanguageInfo { Flag = "🇪🇸", Name = "Spanish", NativeName = "Español", Code = "ES" } },
        { "fr", new LanguageInfo { Flag = "🇫🇷", Name = "French", NativeName = "Français", Code = "FR" } },
        { "de", new LanguageInfo { Flag = "🇩🇪", Name = "German", NativeName = "Deutsch", Code = "DE" } },
        { "ja", new LanguageInfo { Flag = "🇯🇵", Name = "Japanese", NativeName = "日本語", Code = "日本語" } }
    };

    private void ToggleDropdown() => isOpen = !isOpen;

    private async Task SelectLanguage(string langKey)
    {
        currentLangKey = langKey;
        isOpen = false;

        CurrentLanguage = langKey switch
        {
            "zh" => LanguageData.Chinese,
            "es" => LanguageData.Spanish,
            "fr" => LanguageData.French,
            "de" => LanguageData.German,
            "ja" => LanguageData.Japanese,
            _ => LanguageData.English
        };

        await CurrentLanguageChanged.InvokeAsync(CurrentLanguage);
    }

    private string GetCurrentFlag() => languages[currentLangKey].Flag;
    private string GetCurrentLanguageCode() => languages[currentLangKey].Code;

    private class LanguageInfo
    {
        public string Flag { get; set; } = string.Empty;
        public string Name { get; set; } = string.Empty;
        public string NativeName { get; set; } = string.Empty;
        public string Code { get; set; } = string.Empty;
    }

    public class LanguageData
    {
        public string Home { get; set; } = string.Empty;
        public string Features { get; set; } = string.Empty;
        public string About { get; set; } = string.Empty;
        public string Contact { get; set; } = string.Empty;
        public string Login { get; set; } = string.Empty;
        public string AllRightsReserved { get; set; } = string.Empty;
        public string Privacy { get; set; } = string.Empty;
        public string Terms { get; set; } = string.Empty;
        public string Cookies { get; set; } = string.Empty;

        public static LanguageData English => new()
        {
            Home = "Home",
            Features = "Features",
            About = "About",
            Contact = "Contact",
            Login = "Login",
            AllRightsReserved = "All rights reserved.",
            Privacy = "Privacy",
            Terms = "Terms",
            Cookies = "Cookies"
        };

        public static LanguageData Chinese => new()
        {
            Home = "首页",
            Features = "功能",
            About = "关于",
            Contact = "联系",
            Login = "登录",
            AllRightsReserved = "版权所有。",
            Privacy = "隐私",
            Terms = "条款",
            Cookies = "Cookie"
        };

        public static LanguageData Spanish => new()
        {
            Home = "Inicio",
            Features = "Características",
            About = "Acerca de",
            Contact = "Contacto",
            Login = "Iniciar sesión",
            AllRightsReserved = "Todos los derechos reservados.",
            Privacy = "Privacidad",
            Terms = "Términos",
            Cookies = "Cookies"
        };

        public static LanguageData French => new()
        {
            Home = "Accueil",
            Features = "Fonctionnalités",
            About = "À propos",
            Contact = "Contact",
            Login = "Connexion",
            AllRightsReserved = "Tous droits réservés.",
            Privacy = "Confidentialité",
            Terms = "Conditions",
            Cookies = "Cookies"
        };

        public static LanguageData German => new()
        {
            Home = "Startseite",
            Features = "Funktionen",
            About = "Über uns",
            Contact = "Kontakt",
            Login = "Anmelden",
            AllRightsReserved = "Alle Rechte vorbehalten.",
            Privacy = "Datenschutz",
            Terms = "Bedingungen",
            Cookies = "Cookies"
        };

        public static LanguageData Japanese => new()
        {
            Home = "ホーム",
            Features = "機能",
            About = "概要",
            Contact = "お問合せ",
            Login = "ログイン",
            AllRightsReserved = "無断転載禁止。",
            Privacy = "プライバシー",
            Terms = "利用規約",
            Cookies = "クッキー"
        };
    }
}